import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.client.default import DefaultProperties
from aiogram.enums import ParseMode
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InputMediaPhoto, InlineKeyboardMarkup, InlineKeyboardButton

API_TOKEN = '7804128176:AAEPmaDHPvezBzT94xYbT6Nxpd2XDSitezY'

class ConsultForm(StatesGroup):
    name = State()
    phone = State()
    confirm = State()

class Form(StatesGroup):
    brand = State()
    model = State()
    model_variant = State()

bot = Bot(
    token=API_TOKEN,
    default=DefaultProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher(storage=MemoryStorage())

MANAGER_ID = 5221546392
PRIVACY_POLICY_URL = "https://example.com/privacy"


cars_db = {
    '–ê–≤—Ç–æ–≤—ã—à–∫–∏': ['Mitsubishi Fuso', 'Mitsubishi Canter', '–ì–ê–ó 481260', 'Huyndai HD 67'],
    '–ê–≤—Ç–æ–∫—Ä–∞–Ω—ã': ['GROVE GMK 5220', 'GROVE GMK 5170', 'GROVE GMK 5130', 'GROVE GMK 5100', 'LIEBHERR LTM 1050-3.1', '–ö–ê–ú–ê–ó –ö–°-65719'],
    '–ê—Å—Ñ–∞–ª—å—Ç–æ—É–∫–ª–∞–¥—á–∏–∫–∏': ['Vogele S-1804', 'Volvo ABG 5820', 'Vogele SUPER 1900-2'],
    '–ë–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å—ã': ['–ö–ê–ú–ê–ó –ê–ë–ù 75/21 - 21 –º', 'MERCEDES Schwing - 24 –º'],
    '–ë—É–ª—å–¥–æ–∑–µ—Ä—ã': ['Caterpillar D6R', 'Komatsu D275', 'Liebherr PR 752 (–ë–µ–∑ –ì–°–ú)', 'Komatsu D155 (–±–µ–∑ –ì–°–ú)', 'Shantui SD22'],
    '–í–∏–±—Ä–æ–∫–∞—Ç–∫–∏': ['SAKAI CR270 (–≥–ª–∞–¥–∫–∏–π)', 'BOMAG BW120AD (–≥–ª–∞–¥–∫–∏–π)', 'SAKAI SW502-1 (–≥–ª–∞–¥–∫–∏–π)', 'SAKAI SV512TF-H (–ì–†–£–ù–¢–û–í–´–ô)'],
    '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã': ['JCB G220X', 'Airman SDG150S'],
    '–ì—É—Å–µ–Ω–∏—á–Ω—ã–µ —ç–∫—Å–∫–∞–≤–∞—Ç–æ—Ä—ã': ['Hitachi ZX400LCH (–±–µ–∑ –ì–°–ú)', 'Doosan 340', 'Hyundai 300'],
    '–Ø–º–æ–±—É—Ä—ã': ['JCB 540', 'Manitou MT 1637', 'CAT Telehandler TH514'],
    '–≠–∫—Å–∫–∞–≤–∞—Ç–æ—Ä—ã-–ø–æ–≥—Ä—É–∑—á–∏–∫–∏': ['Caterpillar 434E', 'JCB 4CX'],
    '–ö–æ–ª–µ—Å–Ω—ã–µ —ç–∫—Å–∫–∞–≤–∞—Ç–æ—Ä—ã': ['Hyundai 200', 'JCB 175'],
    # –ù–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    '–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä—ã': [
        '–ö–ê–ú–ê–ó 65117-3010-78', 
        '–ö–ê–ú–ê–ó 4308-–°3', 
        'ISUZU ISU75R-7'
    ],
    '–ú–∏–Ω–∏–ø–æ–≥—Ä—É–∑—á–∏–∫–∏': [
        'Bobcat S130', 
        'Bobcat S150', 
        'Bobcat S175', 
        'Bobcat S250'
    ],
    '–°–∞–º–æ—Å–≤–∞–ª—ã': [
        '–ö–ê–ú–ê–ó 6520', 
        'HOWO (–°–ê–ú–û–°–í–ê–õ)', 
        'VOLVO (–°–ê–ú–û–°–í–ê–õ)', 
        '–ö–ê–ú–ê–ó 65116-N3 (–î–õ–ò–ù–ù–û–ú–ï–† 12–º)', 
        '–ö–ê–ú–ê–ó 65115 (–ë–æ—Ä—Ç–æ–≤–æ–π 6–º)'
    ]
    
}
car_data = {
    '–ê–≤—Ç–æ–≤—ã—à–∫–∏': {
        'Mitsubishi Fuso': {
            '2022': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 1.5 —Ç\nüìè –í—ã—Å–æ—Ç–∞ –ø–æ–¥—ä–µ–º–∞: 21 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: 4.9 –ª –¥–∏–∑–µ–ª—å (175 –ª.—Å.)\nüéöÔ∏è –¢–∏–ø: –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–∞—è\nüíµ –ê—Ä–µ–Ω–¥–∞: 15 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–ù–∞–¥–µ–∂–Ω–∞—è —è–ø–æ–Ω—Å–∫–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞. –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≥–æ—Ä–æ–¥—Å–∫–∏—Ö —Ä–∞–±–æ—Ç',
                'photos': ['https://example.com/fuso1.jpg']
            }
        },
        '–ì–ê–ó 481260': {
            '2021': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 1.2 —Ç\nüìè –í—ã—Å–æ—Ç–∞ –ø–æ–¥—ä–µ–º–∞: 17 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: 2.7 –ª (107 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 12 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–≠–∫–æ–Ω–æ–º–∏—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –Ω–µ–≤—ã—Å–æ–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤',
                'photos': ['https://example.com/gaz_avtovishka.jpg']
            }
        }
    },
    '–ê–≤—Ç–æ–∫—Ä–∞–Ω—ã': {
        'GROVE GMK 5220': {
            '2020': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 220 —Ç\nüìè –í—ã–ª–µ—Ç —Å—Ç—Ä–µ–ª—ã: 60 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: Mercedes OM 460 (435 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 45 000 —Ä—É–±/—á–∞—Å',
                'review': '–ú–æ—â–Ω—ã–π –∫—Ä–∞–Ω –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –≥—Ä—É–∑–æ–≤. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞',
                'photos': ['https://example.com/grove_gmk5220.jpg']
            }
        },
        'LIEBHERR LTM 1050-3.1': {
            '2021': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 50 —Ç\nüìè –í—ã–ª–µ—Ç —Å—Ç—Ä–µ–ª—ã: 36 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: Liebherr (367 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 35 000 —Ä—É–±/—á–∞—Å',
                'review': '–ù–µ–º–µ—Ü–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Ç–æ—á–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                'photos': ['https://example.com/liebherr_ltm.jpg']
            }
        }
    },
    '–ê—Å—Ñ–∞–ª—å—Ç–æ—É–∫–ª–∞–¥—á–∏–∫–∏': {
        'Vogele S-1804': {
            '2019': {
                'specs': 'üõ†Ô∏è –®–∏—Ä–∏–Ω–∞ —É–∫–ª–∞–¥–∫–∏: 2.5-8 –º\nüìè –¢–æ–ª—â–∏–Ω–∞ —Å–ª–æ—è: 0-30 —Å–º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: Deutz (129 –∫–í—Ç)\nüíµ –ê—Ä–µ–Ω–¥–∞: 25 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–ò–¥–µ–∞–ª–µ–Ω –¥–ª—è –¥–æ—Ä–æ–∂–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞. –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
                'photos': ['https://example.com/vogele_s1804.jpg']
            }
        }
    },
    '–ë—É–ª—å–¥–æ–∑–µ—Ä—ã': {
        'Caterpillar D6R': {
            '2018': {
                'specs': 'üõ†Ô∏è –ú–∞—Å—Å–∞: 22 —Ç\nüìè –ú–æ—â–Ω–æ—Å—Ç—å: 228 –ª.—Å.\n‚öôÔ∏è –®–∏—Ä–∏–Ω–∞ –æ—Ç–≤–∞–ª–∞: 3.5 –º\nüíµ –ê—Ä–µ–Ω–¥–∞: 18 000 —Ä—É–±/—á–∞—Å',
                'review': '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è –º–æ–¥–µ–ª—å. –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –≤—Ä–µ–º–µ–Ω–µ–º',
                'photos': ['https://example.com/cat_d6r.jpg']
            }
        },
        'Komatsu D275': {
            '2020': {
                'specs': 'üõ†Ô∏è –ú–∞—Å—Å–∞: 35 —Ç\nüìè –ú–æ—â–Ω–æ—Å—Ç—å: 354 –ª.—Å.\n‚öôÔ∏è –®–∏—Ä–∏–Ω–∞ –æ—Ç–≤–∞–ª–∞: 4.3 –º\nüíµ –ê—Ä–µ–Ω–¥–∞: 22 000 —Ä—É–±/—á–∞—Å',
                'review': '–ú–æ—â–Ω—ã–π –±—É–ª—å–¥–æ–∑–µ—Ä –¥–ª—è –º–∞—Å—à—Ç–∞–±–Ω—ã—Ö —Ä–∞–±–æ—Ç',
                'photos': ['https://example.com/komatsu_d275.jpg']
            }
        }
    },
    '–≠–∫—Å–∫–∞–≤–∞—Ç–æ—Ä—ã': {
        'Hitachi ZX400LCH': {
            '2021': {
                'specs': 'üõ†Ô∏è –ú–∞—Å—Å–∞: 40 —Ç\nüìè –û–±—ä–µ–º –∫–æ–≤—à–∞: 1.9 –º¬≥\n‚öôÔ∏è –ú–æ—â–Ω–æ—Å—Ç—å: 294 –ª.—Å.\nüíµ –ê—Ä–µ–Ω–¥–∞: 20 000 —Ä—É–±/—á–∞—Å',
                'review': '–Ø–ø–æ–Ω—Å–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ. –ù–∏–∑–∫–∏–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞',
                'photos': ['https://example.com/hitachi_zx400.jpg']
            }
        },
        'JCB 4CX': {
            '2022': {
                'specs': 'üõ†Ô∏è –ú–∞—Å—Å–∞: 8.5 —Ç\nüìè –û–±—ä–µ–º –∫–æ–≤—à–∞: 1.0 –º¬≥\n‚öôÔ∏è –ú–æ—â–Ω–æ—Å—Ç—å: 74 –ª.—Å.\nüíµ –ê—Ä–µ–Ω–¥–∞: 12 000 —Ä—É–±/—á–∞—Å',
                'review': '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —ç–∫—Å–∫–∞–≤–∞—Ç–æ—Ä-–ø–æ–≥—Ä—É–∑—á–∏–∫ –¥–ª—è –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç',
                'photos': ['https://example.com/jcb_4cx.jpg']
            }
        }
    },
    '–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä—ã': {
        '–ö–ê–ú–ê–ó 65117-3010-78': {
            '2021': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 10 —Ç\nüìè –í—ã–ª–µ—Ç —Å—Ç—Ä–µ–ª—ã: 7.8 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: –ö–ê–ú–ê–ó 740.73-400 (400 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 18 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–ù–∞–¥—ë–∂–Ω—ã–π —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–ª–æ—â–∞–¥–æ–∫',
                'photos': ['https://example.com/kamaz_manipulator1.jpg']
            }
        },
        'ISUZU ISU75R-7': {
            '2022': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 7.5 —Ç\nüìè –í—ã–ª–µ—Ç —Å—Ç—Ä–µ–ª—ã: 6.5 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: Isuzu 4HK1 (190 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 22 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–Ø–ø–æ–Ω—Å–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, —ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞',
                'photos': ['https://example.com/isuzu_manipulator.jpg']
            }
        }
    },
    '–ú–∏–Ω–∏–ø–æ–≥—Ä—É–∑—á–∏–∫–∏': {
        'Bobcat S130': {
            '2023': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 590 –∫–≥\nüìè –í—ã—Å–æ—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∏: 2.1 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: Kubota V2203 (68 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 8 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏ –º–∞–Ω—ë–≤—Ä–µ–Ω–Ω—ã–π –¥–ª—è —Ä–∞–±–æ—Ç –≤ —Å—Ç–µ—Å–Ω—ë–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö',
                'photos': ['https://example.com/bobcat_s130.jpg']
            }
        },
        'Bobcat S250': {
            '2022': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 1130 –∫–≥\nüìè –í—ã—Å–æ—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∏: 2.9 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: Kubota V3307 (74 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 12 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–ú–æ—â–Ω—ã–π –º–∏–Ω–∏–ø–æ–≥—Ä—É–∑—á–∏–∫ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤',
                'photos': ['https://example.com/bobcat_s250.jpg']
            }
        }
    },
    '–°–∞–º–æ—Å–≤–∞–ª—ã': {
        '–ö–ê–ú–ê–ó 6520': {
            '2021': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 20 —Ç\nüìè –û–±—ä—ë–º –∫—É–∑–æ–≤–∞: 12 –º¬≥\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: –ö–ê–ú–ê–ó 740.73-400 (400 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 15 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–ö–ª–∞—Å—Å–∏–∫–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–∑–æ–∫, —Ä–µ–º–æ–Ω—Ç–æ–ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å',
                'photos': ['https://example.com/kamaz_6520.jpg']
            }
        },
        'HOWO (–°–ê–ú–û–°–í–ê–õ)': {
            '2022': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 25 —Ç\nüìè –û–±—ä—ë–º –∫—É–∑–æ–≤–∞: 15 –º¬≥\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: Sinotruk WD615.96 (336 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 18 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–ö–∏—Ç–∞–π—Å–∫–∏–π –∞–Ω–∞–ª–æ–≥ —Å —Ö–æ—Ä–æ—à–µ–π —Ü–µ–Ω–æ–π –∞—Ä–µ–Ω–¥—ã',
                'photos': ['https://example.com/howo_samosval.jpg']
            }
        },
        'VOLVO (–°–ê–ú–û–°–í–ê–õ)': {
            '2023': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 30 —Ç\nüìè –û–±—ä—ë–º –∫—É–∑–æ–≤–∞: 18 –º¬≥\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: Volvo D13K (450 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 25 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Å–∞–º–æ—Å–≤–∞–ª —Å –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∫–∞–±–∏–Ω–æ–π',
                'photos': ['https://example.com/volvo_samosval.jpg']
            }
        },
        '–ö–ê–ú–ê–ó 65116-N3 (–î–õ–ò–ù–ù–û–ú–ï–† 12–º)': {
            '2020': {
                'specs': 'üõ†Ô∏è –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 15 —Ç\nüìè –î–ª–∏–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: 12 –º\n‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: –ö–ê–ú–ê–ó 740.73-400 (400 –ª.—Å.)\nüíµ –ê—Ä–µ–Ω–¥–∞: 16 000 —Ä—É–±/—Å–º–µ–Ω–∞',
                'review': '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –¥–ª–∏–Ω–Ω–æ–º–µ—Ä–Ω—ã—Ö –≥—Ä—É–∑–æ–≤',
                'photos': ['https://example.com/kamaz_long.jpg']
            }
        }
    }
}
 
def get_brands_kb():
    brands = list(cars_db.keys())
    keyboard = []
    for i in range(0, len(brands), 2):
        row = brands[i:i+2]
        keyboard.append([KeyboardButton(text=brand) for brand in row])
    keyboard.append([KeyboardButton(text="üìû –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å")])
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É"
    )

def get_models_kb(brand: str):
    models = cars_db.get(brand, [])
    keyboard = []
    for i in range(0, len(models), 2):
        row = models[i:i+2]
        keyboard.append([KeyboardButton(text=model) for model in row])
    keyboard.append([
        KeyboardButton(text="üîô –°–º–µ–Ω–∏—Ç—å —Ç–µ—Ö–Ω–∏–∫—É"),
        KeyboardButton(text="üìû –ó–∞—è–≤–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É")
    ])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

async def send_car_info(message: types.Message, car_name: str, state: FSMContext, car_info=None):
    if car_info is None:
        car_info = car_data.get(car_name, {})
    
    photos = car_info.get('photos', [])
    specs = car_info.get('specs', 'üö´ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç')

    actions_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé• –í–∏–¥–µ–æ-–æ—Ç–∑—ã–≤—ã", callback_data="video_review")]
    ])

    try:
        if photos:
            media = [InputMediaPhoto(media=photos[0], caption=f"üöò {car_name}\n\n{specs}")]
            media.extend(InputMediaPhoto(media=photo) for photo in photos[1:])
            await message.answer_media_group(media=media)
        else:
            await message.answer(f"üöò {car_name}\n\n{specs}")
        
        await message.answer("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:", reply_markup=actions_kb)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        await message.answer(f"üöò {car_name}\n\n{specs}")

@dp.message(Command('start'))
async def cmd_start(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "üöó –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç '–ê—Ä–µ–Ω–¥–∞ —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∏'!\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É:",
        reply_markup=get_brands_kb()
    )
    await state.set_state(Form.brand)

@dp.message(Form.brand)
async def process_brand(message: types.Message, state: FSMContext):
    if message.text == "üìû –ó–∞—è–≤–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É":
        await state.set_state(ConsultForm.name)
        return await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    
    if message.text not in cars_db:
        return await message.answer("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞!")
    
    await state.update_data(brand=message.text)
    await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å {message.text}:", reply_markup=get_models_kb(message.text))
    await state.set_state(Form.model)

@dp.message(Form.model)
async def process_model(message: types.Message, state: FSMContext):
    data = await state.get_data()
    brand = data.get('brand')
    
    if message.text == "üîô –°–º–µ–Ω–∏—Ç—å —Ç–µ—Ö–Ω–∏–∫—É":
        await state.set_state(Form.brand)
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É:", reply_markup=get_brands_kb())
        return
    
    if message.text == "üìû –ó–∞—è–≤–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É":
        await state.set_state(ConsultForm.name)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
        return
    
    if message.text not in cars_db.get(brand, []):
        await message.answer("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞!")
        return
    
    await state.update_data(model=message.text)
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    try:
        variants = list(car_data.get(brand, {}).get(message.text, {}).keys())
        keyboard = []
        for variant in variants:
            keyboard.append([KeyboardButton(text=variant)])
        
        if keyboard:  # –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã
            keyboard.append([KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –º–æ–¥–µ–ª—è–º")])
            kb = ReplyKeyboardMarkup(
                keyboard=keyboard,
                resize_keyboard=True
            )
            
            await message.answer(
                f"–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç {message.text}:",
                reply_markup=kb
            )
            await state.set_state(Form.model_variant)
            return
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {e}")
    
    # –ï—Å–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    car_name = f"{brand} {message.text}"
    model_data = car_data.get(brand, {}).get(message.text, {})
    car_info = next(iter(model_data.values())) if model_data else {}
    await send_car_info(message, car_name, state, car_info)

@dp.message(ConsultForm.name)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(ConsultForm.phone)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

@dp.message(ConsultForm.phone)
async def process_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await state.set_state(ConsultForm.confirm)
    await message.answer(
        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö:\n{PRIVACY_POLICY_URL}\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ '‚úÖ' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="‚úÖ")]],
            resize_keyboard=True
        )
    )

@dp.message(ConsultForm.confirm)
async def process_confirm(message: types.Message, state: FSMContext):
    if message.text != "‚úÖ":
        await message.answer("‚ùå –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!")
        return
    
    data = await state.get_data()
    try:
        await bot.send_message(
            MANAGER_ID,
            f"üö® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n–ò–º—è: {data['name']}\n–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n–ú–æ–¥–µ–ª—å: {data.get('model', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}"
        )
        await message.answer(
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            reply_markup=get_brands_kb()
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    await state.clear()

@dp.callback_query()
async def handle_inline_buttons(callback: types.CallbackQuery, state: FSMContext):
    if callback.data == "video_review":
        data = await state.get_data()
        if 'brand' in data and 'model' in data:
            brand = data['brand']
            model = data['model']
            variant = data.get('model_variant', '')
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–µ —Å —É—á–µ—Ç–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–∞
            car_info = car_data.get(brand, {}).get(model, {})
            if variant:
                car_info = car_info.get(variant, {})
            
            video = car_info.get('video_review')
            if video:
                await callback.message.answer_video(video)
            else:
                await callback.answer("–í–∏–¥–µ–æ-–æ—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç üõ†", show_alert=True)
        else:
            await callback.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É!", show_alert=True)
    await callback.answer()

@dp.message(Form.model_variant)
async def process_model_variant(message: types.Message, state: FSMContext):
    data = await state.get_data()
    brand = data.get('brand')
    model = data.get('model')
    
    if message.text == "üîô –ù–∞–∑–∞–¥ –∫ –º–æ–¥–µ–ª—è–º":
        await state.set_state(Form.model)
        await message.answer(
            f"–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å {brand}:",
            reply_markup=get_models_kb(brand)
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç
    variants = car_data.get(brand, {}).get(model, {})
    if message.text not in variants:
        await message.answer("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞!")
        return
    
    await state.update_data(model_variant=message.text)
    car_info = variants[message.text]
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ
    await send_car_info(message, f"{brand} {model} ({message.text})", state, car_info)

@dp.message()
async def handle_actions(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    data = await state.get_data()
    
    if message.text == "üîô –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å":
        if 'brand' not in data:
            await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É!", reply_markup=get_brands_kb())
            return
        
        await message.answer(
            f"–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å {data['brand']}:",
            reply_markup=get_models_kb(data['brand'])
        )
        await state.set_state(Form.model)
        return

    elif message.text == "üé• –í–∏–¥–µ–æ-–æ—Ç–∑—ã–≤—ã":
        if 'brand' in data and 'model' in data:
            car_name = f"{data['brand']} {data['model']}"
            video = car_data.get(car_name, {}).get('video_review')
            if video:
                await message.answer_video(video)
            else:
                await message.answer("üìº –í–∏–¥–µ–æ-–æ—Ç–∑—ã–≤—ã –¥–ª—è —ç—Ç–æ–π –º–æ–¥–µ–ª–∏ –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            await message.answer("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É!")

    elif message.text == "üìû –ó–∞—è–≤–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É":
        await state.set_state(ConsultForm.name)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")

    if current_state == Form.brand.state:
        await process_brand(message, state)
    elif current_state == Form.model.state:
        await process_model(message, state)
    else:
        await state.set_state(Form.brand)
        await message.answer("üöó –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å —Ç–µ—Ö–Ω–∏–∫–∏:", reply_markup=get_brands_kb())

    print(f"[EVENT] Unhandled message: {message.text}")

async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())